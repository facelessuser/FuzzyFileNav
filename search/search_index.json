{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"FuzzyFileNav","text":""},{"location":"#overview","title":"Overview","text":"<p>FuzzyFileNav is a simple plugin that allows for quick navigation of the file system from the quick panel.  It also allows for deletion, copying, moving, creation of files and folders, and other actions.</p>"},{"location":"#credits","title":"Credits","text":"<ul> <li> <p>Thanks to quodlibet for helping come up with great ideas for the plugin during development.</p> </li> <li> <p>Special thanks to Boundincode whose witty humor and quirky coding fueled the     development of the plugin. (If only he was more humble\u2026)</p> </li> <li> <p>Thanks to biermeester and matthjes for their suggestions and ideas with platform/host specific settings.</p> </li> </ul>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#package-control","title":"Package Control","text":"<p>The recommended way to install FuzzyFileNav is via Package Control.  Package Control will install the correct branch on your system and keep it up to date.</p> <ol> <li> <p>Ensure Package Control is installed.  Instructions are found here.</p> </li> <li> <p>In Sublime Text, press Ctrl\uff0bShift\uff0bP (Win, Linux) or Cmd\uff0bShift\uff0bP (OSX) to bring up the quick panel.  It will     show a list of installable plugins.</p> </li> <li> <p>Start typing <code>FuzzyFileNav</code>; when you see it, select it.</p> </li> <li> <p>Restart to be sure everything is loaded proper.</p> </li> <li> <p>Enjoy!</p> </li> </ol>"},{"location":"installation/#git-cloning","title":"Git Cloning","text":"<p>Warning</p> <p>This is not the recommended way to install FuzzyFileNav for the casual user as it requires the user to know which branch to install, know how to use git, and will not get automatically updated.</p> <p>If you are forking for a pull request, this is the way to go, just replace the official repository with the link for your fork.</p> <ol> <li> <p>Quit Sublime Text.</p> </li> <li> <p>Open a terminal:</p> <pre><code>cd /path/to/Sublime Text 3/Packages\ngit clone https://github.com/facelessuser/FuzzyFileNav.git FuzzyFileNav\n</code></pre> </li> <li> <p>Restart Sublime Text.</p> </li> </ol>"},{"location":"usage/","title":"User Guide","text":""},{"location":"usage/#general-usage","title":"General Usage","text":"<p>By default, FuzzyFileNav has access enabled via the view context menu.  The context menu gives you various fuzzy navigation methods.  By selecting <code>Fuzzy Nav Here...</code>, you will begin navigating the parent folder of the view's file (if saved on disk).  By selecting an option under <code>Fuzzy File Nav</code>, you can start with a list of folders from the project, bookmarks, or the root of the file system.  If you prefer to initiate the commands from a shortcut, you can define your own; some suggestions are shown in Suggested Accessibility Shortcuts. From the FuzzyFileNav panel, you can use shortcuts to copy, paste, delete, open, and various other file actions.</p>"},{"location":"usage/#using-the-fuzzyfilenav-panel","title":"Using the FuzzyFileNav Panel","text":"<p>While a FuzzyFileNav navigation panel is open, a number of shortcuts will be activated that can apply different actions to a file or folder or aide in navigating the panel.  Actions are only performed when the full name is typed into the panel. Using the path completion navigation shortcut will make this quick and easy.</p>"},{"location":"usage/#autocomplete-file-paths","title":"Autocomplete File Paths","text":"<p>FuzzyFileNav can complete file paths in the quick panel when Tab is pressed.  Depending on the completion style, Shift\uff0bTab can navigate through the completion options backwards.  There are three styles of autocompletion that FuzzyFileNav supports.</p> Autocomplete\u00a0Style Description Sublime Complete path with the selected index in the quick panel. Unix/Linux Complete path like a Unix/Linux terminal traditionally completes paths. Will only complete the path if there is one possible option. Windows Complete path like Windows completes paths in a command prompt. This allows you to cycle through options that start with the entered text. <p>See the completion_style setting for more info on configuring the completion style.</p>"},{"location":"usage/#navigating-folders","title":"Navigating Folders","text":"<p>When navigating folders in the quick panel, you start typing the folder's name, and you can press Tab to complete the path (behavior may differ depending on completion style setting). You can descend into the folder by typing a <code>/</code> at the end (you can also use <code>\\</code> on windows). The full path must be completed for \"slash folder navigation\".  You can can also press Enter and whatever folder is currently selected in the panel will be navigated to.</p> <p>Tip</p> <p>Your file systems root can be accessed any time by typing '/'.  You can also switch to windows drives by typing <code>c:\\</code> etc.</p> <p>The home folder can be accessed any time by typing <code>~/</code> into the FuzzyFileNav quick panel.</p>"},{"location":"usage/#actions","title":"Actions","text":"Action Windows\u00a0&amp;\u00a0Linux macOS Open Enter\u00a0or\u00a0Right Enter\u00a0or\u00a0Right Show/Hide\u00a0hidden\u00a0files Ctrl\uff0bH Cmd\uff0bH Show\u00a0Bookmarks Ctrl\uff0bB Cmd\uff0bB Delete Ctrl\uff0bD Cmd\uff0bD Copy Ctrl\uff0bC Cmd\uff0bC Cut Ctrl\uff0bX Cmd\uff0bX Paste Ctrl\uff0bV Cmd\uff0bV New\u00a0file Ctrl\uff0bN Cmd\uff0bN New\u00a0folder Ctrl\uff0bShift\uff0bN Cmd\uff0bShift\uff0bN Save\u00a0file\u00a0as Ctrl\uff0bS Cmd\uff0bS Reveal Ctrl\uff0bR Cmd\uff0bR Search\u00a0folder Ctrl\uff0bF Cmd\uff0bF Add\u00a0folder\u00a0to\u00a0project Ctrl\uff0bP Cmd\uff0bP Add\u00a0folder\u00a0to\u00a0new\u00a0window Ctrl\uff0bShift\uff0bP Cmd\uff0bShift\uff0bP Get\u00a0Current\u00a0Working\u00a0View Ctrl\uff0b. Cmd\uff0b."},{"location":"usage/#open","title":"Open","text":"<p>This action opens the selected file in the palette.</p>"},{"location":"usage/#showhide-hidden-files","title":"Show/Hide hidden files","text":"<p>Toggles the showing/hiding of hidden files defined by the system or that are hidden via the regular expression patterns in the settings file.</p>"},{"location":"usage/#show-bookmarks","title":"Show Bookmarks","text":"<p>Shows the FuzzyFileNav bookmarks panel.</p>"},{"location":"usage/#delete","title":"Delete","text":"<p>Deletes the folder/file object currently typed in the FuzzyFileNav panel.</p>"},{"location":"usage/#copy","title":"Copy","text":"<p>Copies the folder/file object currently typed file in the FuzzyFileNav panel. The copy will remain in the clipboard until a paste is performed or a new copy is initiated.</p>"},{"location":"usage/#cut","title":"Cut","text":"<p>Cuts (moves) the folder/file object currently typed into the FuzzyFileNav panel. A Fuzzy File Paste must be performed to complete the cut (move). The cut will remain in the clipboard until a paste is performed or another copy or cut replaces it.</p>"},{"location":"usage/#paste","title":"Paste","text":"<p>Pastes the folder/file object that is in the clipboard.  The file/folder will be pasted into the currently opened folder in the FuzzyFileNav panel. To rename the folder/file object on paste, type the full name in the panel that should be used before pressing initiating the paste.</p>"},{"location":"usage/#new-file","title":"New File","text":"<p>Creates a new file in the currently opened folder in the FuzzyFileNav panel.  The name that is typed into the panel is the name that will be used.</p>"},{"location":"usage/#new-folder","title":"New Folder","text":"<p>Creates a new folder in the currently opened folder in the FuzzyFileNav panel.  The name that is typed into the panel is the name that will be used.</p>"},{"location":"usage/#save-file-as","title":"Save File as","text":"<p>Saves the current focused view to the the currently opened folder in the FuzzyFileNav Panel.  The name that is typed into the panel is the name of the file the view will be saved to.  You will be prompted for file overwrite.</p>"},{"location":"usage/#reveal","title":"Reveal","text":"<p>Reveals the location of the file/folder name typed into the FuzzyFileNav panel in your file manager.  Will use the current folder if a valid one is not typed into the panel.</p>"},{"location":"usage/#search-folder","title":"Search Folder","text":"<p>This action will open a folder search panel with the current folder's path, or the path of a subfolder (if one is typed into the FuzzyFileNav panel) and pre-load that folder name into the <code>where</code> box.  Any content in clipboard will be pre-loaded into the <code>Find</code> box.</p>"},{"location":"usage/#add-folder-to-project","title":"Add Folder to Project","text":"<p>Adds the location of the folder name typed into the FuzzyFileNav panel into the current project.  Will use the current folder if a valid one is not typed into the panel.</p>"},{"location":"usage/#add-folder-to-new-window","title":"Add Folder to New Window","text":"<p>Open's a new window and adds the location of the folder name typed into the FuzzyFileNav panel into the current project. Will use the current folder if a valid one is not typed into the panel.</p>"},{"location":"usage/#get-current-working-view","title":"Get Current Working View","text":"<p>Gets the file name of the current working view and copies it into the FuzzyFileNav Panel.</p>"},{"location":"usage/#settings","title":"Settings","text":"<p>There are various settings you can alter to enhance your experience with FuzzyFileNav.</p>"},{"location":"usage/#bookmarks","title":"<code>bookmarks</code>","text":"<p>When using the bookmark command, you can bring up a list of bookmarked folders.  Bookmarks are defined in <code>bookmarks</code> setting as shown below. To add or change the bookmark list, just add, remove or modify an entry in the bookmark list. Each entry is a dictionary containing two keys: <code>name</code> and <code>path</code>.  <code>name</code> is the name that will be displayed, path is the path to the folder.</p> <pre><code>    // Bookmarked paths\n    \"bookmarks\": [\n        {\"name\": \"My Computer\", \"path\": \"\"},\n        {\"name\": \"Root\", \"path\": \"/\"}\n    ]\n</code></pre> <p>Tip</p> <p>If it is desired to have specific bookmarks show up only on a specific OS or a specific host, you can augment the <code>path</code> option using the notation below.  For more information, please seePlatform/Computer Specific Settings.</p> <pre><code>    // Bookmarked paths\n    \"bookmarks\": [\n        {\"name\": \"My Computer\", \"path\": {\"#multiconf#\": [{\"os:windows\": \"\"}]}},\n        {\"name\": \"Root\", \"path\": {\"#multiconf#\": [{\"os:linux\": \"/\"}, {\"os:osx\": \"/\"}]}}\n    ]\n</code></pre>"},{"location":"usage/#home","title":"<code>home</code>","text":"<p><code>home</code> is your home directory.  By default it is <code>~</code> which expands to your user directory on your OS, but if you would like to modify it to be something else, this is the place!</p> <pre><code>    // Location of home folder\n    \"home\": \"~\",\n</code></pre>"},{"location":"usage/#regex_exclude","title":"<code>regex_exclude</code>","text":"<p><code>regex_exclude</code> is an array of regular expression patterns that indicate which files and folders FuzzyFileNav should ignore.</p> <pre><code>    // Patterns of files/folders to exclude\n    \"regex_exclude\": [\".*\\\\.(DS_Store|svn|git)$\"],\n</code></pre>"},{"location":"usage/#keep_panel_open_after_action","title":"<code>keep_panel_open_after_action</code>","text":"<p>Controls whether the quick panel should remain open after a file action (such as open) as performed.</p> <pre><code>    // Keep panel open after a file is opened, deleted, created, etc. so\n    // More files can be have actions performed on them.\n    \"keep_panel_open_after_action\": true,\n</code></pre>"},{"location":"usage/#keep_panel_open_exceptions","title":"<code>keep_panel_open_exceptions</code>","text":"<p>Provides exceptions for the keep_panel_open_after_action setting.</p> <pre><code>    // Actions that can ignore the keep panel open settings\n    // Available actions: delete, open, saveas, mkfile, mkdir, paste\n    \"keep_panel_open_exceptions\": [],\n</code></pre>"},{"location":"usage/#show_system_hidden_files","title":"<code>show_system_hidden_files</code>","text":"<p>Controls whether system hidden files are shown in FuzzyFileNav. How files are hidden vary on a given OS, but this should be able to show them.</p> <pre><code>    // Controls whether system hidden files are shown in FuzzyFileNav.\n    \"show_system_hidden_files\": true,\n</code></pre>"},{"location":"usage/#completion_style","title":"<code>completion_style</code>","text":"<p>Allows the changing of the completion style to one of three styles.</p> <pre><code>    // (fuzzy/windows/nix)\n    // fuzzy   - this will auto-complete with the selected index in the quick panel\n    // windows - this will complete like a windows terminal would complete paths\n    // nix     - this will complete like a unix/linux terminal traditionally completes paths\n    \"completion_style\": \"fuzzy\",\n</code></pre>"},{"location":"usage/#start_from_here_default_action","title":"<code>start_from_here_default_action</code>","text":"<p>There are times when the a FuzzyFileNav navigation command won't be fed a path.  One example is when the <code>Fuzzy Nav Here...</code> command is run from a view that hasn't been saved to disk.  This setting allows you to specify the fallback options to display.</p> <pre><code>    // If the \"FuzzyStartFromFileCommand\" is run outside of an open buffer\n    // or from a buffer that does not exist on disk, you can specify\n    // its default action to do instead of starting navigation from\n    // a file's location.  Options are \"bookmarks\", \"home\", \"root\", \"project\".\n    \"start_from_here_default_action\": \"bookmarks\",\n</code></pre>"},{"location":"usage/#add_folder_to_project_relative","title":"<code>add_folder_to_project_relative</code>","text":"<p>When a FuzzyFileNav adds a folder to the project, this will be used to determined if the folder should be added as a path relative to the project file or not.</p> <pre><code>    // Add your folders relative to the project file (if project file exists on disk)\n    \"add_folder_to_project_relative\": false,\n</code></pre>"},{"location":"usage/#add_folder_to_project_follow_symlink","title":"<code>add_folder_to_project_follow_symlink</code>","text":"<p>When a FuzzyFileNav adds a folder to the project, this will be used to determined if the folder should have the <code>follow_symlinks</code> option set.</p> <pre><code>    // When adding folder to project, set \"follow_symlinks\" setting as true or false\n    \"add_folder_to_project_follow_symlink\": true,\n</code></pre>"},{"location":"usage/#use_sub_notify","title":"<code>use_sub_notify</code>","text":"<p>Enables use of SubNotify notifications.</p> <pre><code>    // Use subnotify if available\n    \"use_sub_notify\": true\n</code></pre>"},{"location":"usage/#suggested-accessibility-shortcuts","title":"Suggested Accessibility Shortcuts","text":"<p>You can create shortcuts to access FuzzyFileNav Quickly, some examples are shown below.</p> <p>For Windows/Linux:</p> <pre><code>    [\n        // Start from the parent folder of the current view's file\n        { \"keys\": [\"ctrl+o\"], \"command\": \"fuzzy_start_from_file\" },\n        // Show bookmarked folders\n        { \"keys\": [\"ctrl+shift+o\"], \"command\": \"fuzzy_bookmarks_load\" }\n    ]\n</code></pre> <p>For macOS:</p> <pre><code>    [\n        // Start from the parent folder of the current view's file\n        { \"keys\": [\"super+o\"], \"command\": \"fuzzy_start_from_file\" },\n        // Show bookmarked folders\n        { \"keys\": [\"super+shift+o\"], \"command\": \"fuzzy_bookmarks_load\" }\n    ]\n</code></pre>"},{"location":"usage/#platformcomputer-specific-settings","title":"Platform/Computer Specific Settings","text":"<p>Currently, the <code>home</code> settings in the settings file, and the <code>path</code> setting in a bookmark entry can be configured to have multiple OS and/or host specific settings to help manage settings across different machines.</p> <p>The syntax to configure one of these settings for multiple OS and/or hostname:</p> <ul> <li>The setting should be a key/value pair, where the key is <code>#multiconf#</code> and the value is an array of key/value entries     whose keys describe the host and/or os qualifiers needed for the value to be used.</li> <li>The key/value entries will have a key that represents one or more qualifiers, each of which must be separated with a     <code>;</code></li> <li>Each qualifier consists of the qualifier type and a qualifier value to compare against.  These will be separated by a     <code>:</code>.</li> <li>There are two supported qualifiers: <code>host</code> and <code>os</code>.  <code>host</code> is the name of your PC.  <code>os</code> is the platform and can be     either <code>windows</code>, <code>linux</code>, or <code>osx</code>.</li> <li>The key/value entries will have a value associated with the key, and can be of any type: string, number, array,     dictionary, etc.  This value is what will be returned if the qualifier is met.</li> </ul> <p>examples:</p> <pre><code>    \"home\": {\"#multiconf#\": [{\"os:windows\": \"c:\\\\Some\\\\Location\"}, {\"os:linux\": \"/Some/Linux/Location\"}]},\n</code></pre> <pre><code>    \"home\": {\n        \"#multiconf#\": [\n            {\"os:windows\": \"C:\\\\Users\"},\n            {\"os:linux;host:his_pc\": \"/home\"},\n            {\"os:linux;host:her_pc\": \"/home/her/special\"}\n        ]\n    }\n</code></pre>"},{"location":"about/contributing/","title":"Contributing &amp; Support","text":""},{"location":"about/contributing/#overview","title":"Overview","text":"Sublime Versions Description ST2 Supported on a separate branch, but not actively.  Any further fixes or enhancements must come from the community.  Issues for versions less than ST3 will not be addressed moving forward by me.  Pull requests are welcome for back-porting features, enhancements, or fixes to the old branch, but the content of the pull must already exist on the main, actively developed branch.  I will not allow an older branch to exceed the main branch in regards to functionality. ST3 Fully supported and actively maintained. <p>Contribution from the community is encouraged and can be done in a variety of ways:</p> <ul> <li>Become a sponsor.</li> <li>Bug reports.</li> <li>Reviewing code.</li> <li>Code patches via pull requests.</li> <li>Documentation improvements via pull requests.</li> </ul>"},{"location":"about/contributing/#become-a-sponsor","title":"Become a Sponsor","text":"<p>Open source projects take time and money. Help support the project by becoming a sponsor. You can add your support at any tier you feel comfortable with. No amount is too little. We also accept one time contributions via PayPal.</p> <p> GitHub Sponsors  PayPal</p>"},{"location":"about/contributing/#bug-reports","title":"Bug Reports","text":"<ol> <li> <p>Please read the documentation and search the issue tracker to try to find the answer to your question     before posting an issue.</p> </li> <li> <p>When creating an issue on the repository, please provide as much info as possible:</p> <ul> <li>Sublime Text build.</li> <li>Operating system.</li> <li>Errors in console.</li> <li>Detailed description of the problem.</li> <li>Examples for reproducing the error.  You can post pictures, but if specific text or code is required to     reproduce the issue, please provide the text in a plain text format for easy copy/paste.</li> </ul> <p>The more info provided the greater the chance someone will take the time to answer, implement, or fix the issue.</p> </li> <li> <p>Be prepared to answer questions and provide additional information if required.  Issues in which the creator refuses     to respond to follow up questions will be marked as stale and closed.</p> </li> </ol>"},{"location":"about/contributing/#reviewing-code","title":"Reviewing Code","text":"<p>Take part in reviewing pull requests and/or reviewing direct commits.  Make suggestions to improve the code and discuss solutions to overcome weakness in the algorithm.</p>"},{"location":"about/contributing/#pull-requests","title":"Pull Requests","text":"<p>Pull requests are welcome, and if you plan on contributing directly to the code, there are a couple of things to be mindful of.</p> <p>Continuous integration tests on are run on all pull requests and commits via Travis CI.  When making a pull request, the tests will automatically be run, and the request must pass to be accepted.  You can (and should) run these tests before pull requesting.  If it is not possible to run these tests locally, they will be run when the pull request is made, but it is strongly suggested that requesters make an effort to verify before requesting to allow for a quick, smooth merge.</p> <p>Feel free to use a virtual environment if you are concerned about installing any of the Python packages.  In the future, I may use tox, but as I currently only test on Python 3.3, I wanted to keep things simple.</p>"},{"location":"about/contributing/#running-validation-tests","title":"Running Validation Tests","text":"<p>Tip</p> <p>If you are running Sublime on a OSX or Linux/Unix system, you run all tests by by running the shell script (assuming you have installed your environment fulfills all requirements below):</p> <pre><code>chmod +x run_tests.sh\n./run_tests.sh\n</code></pre> <p>There are a couple of dependencies that must be present before running the tests.</p> <ol> <li> <p>As ST3 is the only current, actively supported version, Python 3.3 must be used to validate the tests.</p> </li> <li> <p>Unit tests are run with <code>pytest</code>.  You can install <code>pytest</code> via:</p> <pre><code>pip install pytest\n</code></pre> <p>The tests should be run from the root folder of the plugin by using the following command:</p> <pre><code>py.test .\n</code></pre> </li> <li> <p>Linting is performed on the entire project with with the libraries below.  They can be installed with:</p> <pre><code>pip install flake8\npip install flake8-docstrings\npip install flake8-mutable\npip install flake8-builtins\npip install pep8-naming\n</code></pre> <p>Linting is performed with the following command:</p> <pre><code>flake8 .\n</code></pre> </li> </ol>"},{"location":"about/contributing/#documentation-improvements","title":"Documentation Improvements","text":"<p>A ton of time has been spent not only creating and supporting this plugin, but also spent making this documentation.  If you feel it is still lacking, show your appreciation for the plugin by helping to improve the documentation.  Help with documentation is always appreciated and can be done via pull requests.  There shouldn't be any need to run validation tests if only updating documentation.</p> <p>You don't have to render the docs locally before pull requesting, but if you wish to, I currently use a combination of mkdocs with my own custom Python Markdown extensions to render the docs.  You can preview the docs if you install these two packages.  The command for previewing the docs is <code>mkdocs serve</code> from the root directory.</p>"},{"location":"about/license/","title":"License","text":"<p>FuzzyFileNav is released under the MIT license.</p> <p>Copyright \u00a9 2012 - 2024 Isaac Muse isaacmuse@gmail.com</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy oft his software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"}]}